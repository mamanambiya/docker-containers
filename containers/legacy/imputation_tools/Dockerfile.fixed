############################################################
# Dockerfile to build Genotype imputation tools
# Based on Alpine Linux for stability
############################################################

# Set the base image to Alpine Linux
FROM alpine:3.19

# File Author / Maintainer
LABEL maintainer="Mamana Mbiyavanga mamana.mbiyavanga@uct.ac.za"
LABEL version="2.0-alpine"
LABEL description="Genotype imputation tools based on Alpine Linux"

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

################## BEGIN INSTALLATION ######################

# Install system dependencies
RUN apk add --no-cache \
  autoconf \
  automake \
  libtool \
  build-base \
  cmake \
  git \
  ncurses-dev \
  pkgconfig \
  unzip \
  wget \
  curl \
  python3 \
  python3-dev \
  py3-pip \
  bzip2-dev \
  xz-dev \
  zlib-dev \
  bash \
  ca-certificates

# Install conda for R packages
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
  /bin/bash ~/miniconda.sh -b -p /opt/conda && \
  rm ~/miniconda.sh && \
  echo "export PATH=/opt/conda/bin:$PATH" >> ~/.bashrc

ENV PATH /opt/conda/bin:$PATH

# Install htslib
RUN wget https://github.com/samtools/htslib/releases/download/1.19/htslib-1.19.tar.bz2 && \
  tar -xvf htslib-1.19.tar.bz2 && \
  cd htslib-1.19 && \
  ./configure --prefix=/usr/local && \
  make && \
  make install && \
  cd .. && rm -rf htslib-1.19*

# Install samtools
RUN wget https://github.com/samtools/samtools/releases/download/1.19/samtools-1.19.tar.bz2 && \
  tar -xvf samtools-1.19.tar.bz2 && \
  cd samtools-1.19 && \
  ./configure --prefix=/usr/local && \
  make && \
  make install && \
  cd .. && rm -rf samtools-1.19*

# Install bcftools (fixed version numbers)
RUN wget https://github.com/samtools/bcftools/releases/download/1.19/bcftools-1.19.tar.bz2 && \
  tar -xvf bcftools-1.19.tar.bz2 && \
  cd bcftools-1.19 && \
  ./configure --prefix=/usr/local && \
  make && \
  make install && \
  cd .. && rm -rf bcftools-1.19*

# Install VCFTools
RUN wget https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz && \
  tar -xvf vcftools-0.1.16.tar.gz && \
  cd vcftools-0.1.16 && \
  ./autogen.sh && \
  ./configure --prefix=/usr/local && \
  make && \
  make install && \
  cd .. && rm -rf vcftools-0.1.16*

# Install bedtools (using static binary for Alpine compatibility)
RUN wget https://github.com/arq5x/bedtools2/releases/download/v2.31.1/bedtools.static.binary && \
  chmod +x bedtools.static.binary && \
  mv bedtools.static.binary /usr/local/bin/bedtools

# Install minimac4 (build from source for Alpine)
RUN git clone --depth 1 --branch v1.0.2 https://github.com/statgen/Minimac4.git && \
  cd Minimac4 && \
  mkdir build && \
  cd build && \
  cmake .. && \
  make -j$(nproc) && \
  mv minimac4 /usr/local/bin/ && \
  cd ../.. && rm -rf Minimac4

# Install PLINK2 (build from source for better Alpine compatibility)
RUN git clone --depth 1 https://github.com/chrchang/plink-ng.git && \
  cd plink-ng/2.0/build_dynamic && \
  make -j$(nproc) && \
  mv plink2 /usr/local/bin/ && \
  cd ../../.. && rm -rf plink-ng

# Install Eagle
RUN wget https://alkesgroup.broadinstitute.org/Eagle/downloads/Eagle_v2.4.1.tar.gz && \
  tar -xzf Eagle_v2.4.1.tar.gz && \
  mv Eagle_v2.4.1/eagle /usr/local/bin/ && \
  chmod +x /usr/local/bin/eagle && \
  rm -rf Eagle_v2.4.1*

# Install R and R packages
RUN conda clean --all --yes && \
  conda install -y -c bioconda r-ggplot2 r-dplyr r-plyr r-tidyr r-data.table r-reshape2 r-optparse r-sm && \
  conda clean --all --yes && \
  conda install -y -c conda-forge r-ggsci && \
  conda clean --all --yes

# Install additional tools
RUN conda install -y -c bioconda snpeff=4.3 snpsift && \
  conda clean --all --yes

# Create non-root user
RUN adduser -D -s /bin/bash ubuntu && \
  chown -R ubuntu:ubuntu /home/ubuntu

# Set up environment
ENV PATH="/usr/local/bin:/opt/conda/bin:${PATH}"
ENV LD_LIBRARY_PATH="/usr/local/lib:${LD_LIBRARY_PATH}"

# Create test script
RUN echo '#!/bin/bash' > /usr/local/bin/test-imputation-tools && \
  echo 'echo "=== Testing Imputation Tools ==="' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "SAMtools: $(samtools --version | head -1)"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "BCFtools: $(bcftools --version | head -1)"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "VCFtools: $(vcftools --version 2>&1 | head -1)"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "BEDtools: $(bedtools --version)"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "Minimac4: $(minimac4 --version 2>&1 | head -1 || echo "minimac4 available")"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "PLINK2: $(plink2 --version 2>&1 | head -1 || echo "plink2 available")"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "Eagle: $(eagle 2>&1 | head -3 | tail -1 || echo "eagle available")"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "Python: $(python3 --version)"' >> /usr/local/bin/test-imputation-tools && \
  echo 'echo "Conda: $(conda --version)"' >> /usr/local/bin/test-imputation-tools && \
  chmod +x /usr/local/bin/test-imputation-tools

WORKDIR /home/ubuntu
USER ubuntu

CMD ["/bin/bash"] 