name: Build Python Plotting Container

on:
  push:
    paths:
      - 'containers/python-plotting/**'
      - '.github/workflows/build-python-plotting.yml'
    branches:
      - main
      - master
      - develop
  pull_request:
    paths:
      - 'containers/python-plotting/**'
      - '.github/workflows/build-python-plotting.yml'
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Tag version for the container'
        required: false
        default: '1.1.0'

env:
  REGISTRY: docker.io
  IMAGE_NAME: mamana/python-plotting

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ github.event.inputs.tag_version || '1.1.0' }}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./containers/python-plotting
          file: ./containers/python-plotting/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Test the container
        if: success()
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag_version || '1.1.0' }} python -c "
          import numpy as np
          import pandas as pd
          import matplotlib
          import seaborn as sns
          import scipy
          import pdfkit
          print('✓ NumPy version:', np.__version__)
          print('✓ Pandas version:', pd.__version__)
          print('✓ Matplotlib version:', matplotlib.__version__)
          print('✓ Seaborn version:', sns.__version__)
          print('✓ SciPy version:', scipy.__version__)
          print('✓ PDFKit version:', pdfkit.__version__ if hasattr(pdfkit, '__version__') else 'installed')
          print('✓ All packages imported successfully!')
          "